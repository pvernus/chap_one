---
title: "Analysis"
format: html
---

# ATTs staggered

## Binarize and staggerize

```{r att_bin_stagg_sample}

### Sample

data_att_bin_stagg <- df_att_bin_stagg |> 
  # define estimation window
  filter(year >= 2004) |> 
  # remove always-treated
  filter(g.name != 2001) |> 
  # add linear trend
  mutate(t = year - min(year) + 1) |> 
  # add vars
  mutate(
    # short- and medium-term treatment
    treat_04 = ifelse((year - g.name) %in% 0:4, 1, 0),
    treat_510 = ifelse((year - g.name) %in% 5:10, 1, 0),
    # binning endpoints
    low_end = ifelse((year - g.name) < -10, 1, 0),
    high_end = ifelse((year - g.name) > 10, 1, 0)
  ) |> 
  mutate(across(starts_with("y."), ~ ifelse(.x > 0, 1, 0), 
                .names = "{.col}_dummy")) |> 
  relocate(ends_with("dummy"), .after = y.dev)

```

```{r}

## Event-study but bin the relative periods

df.es <- data_att_bin_stagg |> 
  # add time-to-treatment
  mutate(time_to_treatment = year - g.name) |> 
  mutate(time_to_treatment = case_when(
    time_to_treatment < -10 ~ -11,
    time_to_treatment %in% -10:-2 ~ bin(time_to_treatment, "bin::2"),
    time_to_treatment %in% 0:10 ~ bin(time_to_treatment, "bin::2"),
    time_to_treatment > 10 ~ 11,
    .default = time_to_treatment
  ))

iplot(feols(c(log(y.hum+.001), log(y.dev+.001)) ~ i(time_to_treatment, -1) | id + year + donor_id, cluster= ~id, data = df.es))

# Sun and Abraham
res.sunab = feols(c(log(y.hum+.001), log(y.dev+.001)) ~ sunab(g.name, year, bin.rel="bin::2") | id + year + donor_id, 
      cluster=~id,
      data=df.es)

summary(res.sunab, agg = "att")

iplot(res.sunab)

```


```{r att_bin_stagg_res}

### Estimation

## Linear

# TWFE log-OLS
res.ols = feols(
  c(log(y.hum+.001), log(y.dev+.001)) ~ treat_04 + treat_510 + low_end + high_end | id + year + donor_id + recipient_id[t],
  cluster = ~id,
  data = data_att_bin_stagg)

etable(res.ols)

# Aggregation log-OLS

# Imputation log-OLS

## Non-linear

# TWFE PPML
res.pois = fepois(
  c(y.hum, y.dev) ~ treat_04 + treat_510 + low_end + high_end | id + year + donor_id + recipient_id[t],
  cluster = ~id,
  data = data_att_bin_stagg)

etable(res.pois)

# TWFE GLM("logit")
res.glm = feglm(family = binomial(link = "logit"),
  c(y.hum_dummy, y.dev_dummy) ~ treat_04 + treat_510 + low_end + high_end | id + year + donor_id + recipient_id[t],
  cluster = ~id,
  data = data_att_bin_stagg)

etable(res.glm)

# ETWFE PPML
# (Imputation PPML)

```

-   TWFE log-OLS: positive and significant effects for both short and medium terms. However, endpoints are also significant...

-   TWFE GLM: non-significant results.

> Comment: not sure why (lag) endpoint estimate is significant in TWFE log-OLS. Non-significant results for GLM might be due to (i) too many non-reactive (small) donors, (ii) low severity 'first' disaster.

```{r att_bin_stagg_res_top_donor}

df_top_donor <- left_join(data_att_bin_stagg, rank_donor, by = c("donor_id", "donor_name")) |> 
  relocate(top20, .before = donor_id)

### Estimation

## Linear

# TWFE log-OLS
res.ols = feols(split = ~top20,
  c(log(y.hum+.001), log(y.dev+.001)) ~ treat_04 + treat_510 + low_end + high_end | id + year + donor_id + recipient_id[t],
  cluster = ~id,
  data = df_top_donor)

etable(res.ols)

# Aggregation log-OLS
# Imputation log-OLS

## Non-linear

# TWFE PPML
res.pois = fepois(split = ~top20,
  c(y.hum, y.dev) ~ treat_04 + treat_510 + low_end + high_end | id + year + donor_id + recipient_id[t],
  cluster = ~id,
  data = df_top_donor)

etable(res.pois)

# TWFE GLM("logit")
res.glm = feglm(family = binomial(link = "logit"),
                split = ~top20,
  c(y.hum_dummy, y.dev_dummy) ~ treat_04 + treat_510 + low_end + high_end | id + year + donor_id + recipient_id[t],
  cluster = ~id,
  data = df_top_donor)

etable(res.glm)
```

- Results: size heterogeneity between donors doesn't seem to play a role in the results.

## Unique treatment w/ varying intensity, staggered setting

### Quantile dummies

```{r data_att_quantile_stagg_sample}

data_att_quantile_stagg <- df_att_quantile_stagg |> 
  # define estimation window
  filter(year >= 2004) |> 
  # remove always-treated
  filter(g.name != 2001) |> 
  # add linear trend
  mutate(t = year - min(year) + 1) |> 
  # add binning endpoints
#  mutate(
#    low_end = ifelse((year - g.name) < -10, 1, 0),
#    high_end = ifelse((year - g.name) > 10, 1, 0)
#  ) |> 
  # add binomial outcome
  mutate(across(starts_with("y."), ~ ifelse(.x > 0, 1, 0), 
                .names = "{.col}_dummy")) |> 
  relocate(y.hum_dummy:y.dev_dummy, .after = y.dev)

head(data_att_quantile_stagg)

```

```{r data_att_quantile_stagg_res}

### Estimation

## Linear
##  + low_end + high_end

# TWFE log-OLS
res.ols = feols(
  c(log(y.hum+.001), log(y.dev+.001)) ~ q1_dummy + q2_dummy + q3_dummy + q4_dummy | id + year + csw0(donor_id, recipient_id[t]),
  cluster = ~id,
  data = data_att_quantile_stagg)

etable(res.ols)

# Aggregation log-OLS
etwfe(
  fml  = c(log(y.hum+.001), log(y.dev+.001)) ~ q1_dummy + q2_dummy + q3_dummy + q4_dummy | id + year + csw0(donor_id, recipient_id[t]),
  tvar = year,        # time variable
  gvar = first.treat, # group variable
  data = mpdta,       # dataset
  vcov = ~countyreal  # vcov adjustment (here: clustered)
)
 
# Imputation log-OLS

## Non-linear

# TWFE PPML
res.pois = fepois(
  c(y.hum, y.dev) ~ q1_dummy + q2_dummy + q3_dummy + q4_dummy | id + year + csw0(donor_id, recipient_id[t]),
  cluster = ~id,
  data = data_att_quantile_stagg)

etable(res.pois)

# TWFE GLM("logit")
res.glm = feglm(family = binomial(link = "logit"),
  c(y.hum_dummy, y.dev_dummy) ~ q1_dummy + q2_dummy + q3_dummy + q4_dummy | id + year + csw0(donor_id, recipient_id[t]),
  cluster = ~id,
  data = data_att_quantile_stagg)

etable(res.glm)

# ETWFE PPML
# (Imputation PPML)
# 
```











## Overall

```{r pois}

# define sample
df.pois <- df |> 
  select(year, id, donor_id, recipient_id, 
         y.name = commit_total, 
         rel_time, t,
         treat,
         region_agg) |> 
  mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.pois = fepois(
  y.name ~ i(time_to_treatment, treat, -1) | id + year + donor_id^year + recipient_id[t],
  cluster = ~id,
  data = df.pois)

# plot
ggfixest::ggiplot(res.pois, ci_level = c(0.8, 0.95),
                  main = "Effect on overall commitments")

```

```{r}

ggplot(df.pois, aes(x=time_to_treatment)) +
  geom_histogram()
```

```{r}

# alternative model
 res.pois = fepois(
   y.name ~ i(time_to_treatment, treat, -1) | id + year + region_agg + recipient_id[t],
  cluster = ~id,
  data = df.pois)

# plot
ggfixest::ggiplot(res.pois, ci_level = c(0.8, 0.95),
                  main = "Effect on overall commitments")
```

```{r pois.sect}

# define sample
df.pois.sect <- df.sect |> 
  select(year, id, donor_id, recipient_id, sector = sector_hum,
         y.name = commit_total, 
         rel_time, t,
         treat,
         region_agg) |> 
  mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.pois.sect = fepois(
  y.name ~ i(time_to_treatment, treat, -1) | id + year + donor_id^year + recipient_id[t],
  cluster = ~id,
  split = ~sector,
  data = df.pois.sect)

# plot
ggfixest::ggiplot(res.pois.sect, ci_level = c(0.8, 0.95),
                  multi_style = "facet",
                  main = "Effect on overall commitments")

```

### Extensive margin

```{r glm}

# define sample
df.glm <- df |> 
  select(year, id, donor_id, recipient_id, 
         y.name = commit_total_dummy,
         rel_time, t,
         treat,
         region_agg) |> 
    mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.glm = feglm(family = "binomial",
  y.name ~ i(time_to_treatment, treat, -1) | id + year + donor_id^year + recipient_id[t],
  cluster = ~id,
  data = df.glm)

# plot
ggfixest::ggiplot(res.glm, main = "Extensive margin effect on overall commitments")
```

```{r glm.sect}

# define sample
df.glm.sect <- df.sect |> 
  select(year, id, donor_id, recipient_id, sector = sector_hum,
         y.name = commit_total_dummy,
         rel_time, t,
         treat,
         region_agg) |> 
    mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.glm.sect = feglm(family = binomial(link = "logit"),
  y.name ~ i(time_to_treatment, treat, -1) | id + year + donor_id^year + recipient_id[t],
  cluster = ~id,
  split = ~sector,
  data = df.glm.sect)

# plot
ggfixest::ggiplot(res.glm.sect, ci_level = c(0.8, 0.95),
                  multi_style = "facet",
                  main = "Extensive margin effect on overall commitments")
```

## Design

```{r pois.design}

# define sample
df.pois.design <- df |> 
  select(year, id, donor_id, recipient_id, 
         commit_budg, commit_proj,
         rel_time, t,
         treat,
         region_agg) |> 
    mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.pois.design = fepois(
  c(commit_budg, commit_proj) ~ 
  i(time_to_treatment, treat, -1) | id + year + donor_id^year + recipient_id[t],
  cluster = ~id,
  data = df.pois.design)

# plot
ggfixest::ggiplot(res.pois.design, multi_style = "facet", main = "Effect on aid design (USD)")

```

```{r ols.design}

# define sample
df.ols.design <- df |> 
  select(year, id, donor_id, recipient_id, 
         budget = sh_budg, project = sh_proj,
         rel_time, t,
         treat,
         region_agg) |> 
    mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.ols.design = feols(
  c(budget, project) ~ 
  i(time_to_treatment, treat, -1) | id + year + donor_id^year + recipient_id[t],
  cluster = ~id,
  data = df.ols.design)

# plot
ggfixest::ggiplot(res.ols.design, multi_style = "facet", main = "Effect on aid design (%)")

```

```{r pois.design.sect}

df.pois.design.sect <- df.sect |> 
  select(year, id, donor_id, recipient_id, sector = sector_hum,
         commit_budg, commit_proj,
         rel_time, t,
         treat,
         region_agg) |> 
    mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.pois.design.sect = fepois(
  c(commit_budg, commit_proj) ~ 
  i(time_to_treatment, treat, -1) | id + year,
  cluster = ~id,
  split = ~sector,
  data = df.pois.design.sect)

# plot
ggfixest::ggiplot(res.pois.design.sect, 
                  multi_style = "facet", 
                  main = "Effect on aid design (USD)")

```

## Implementation

```{r pois.implementation}

# define sample
df.pois.implementation <- df |> 
  select(year, id, donor_id, recipient_id, 
         state = commit_state, nonstate = commit_nonstate,
         rel_time, t,
         treat,
         region_agg) |> 
    mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.pois.implementation = fepois(
  c(state, nonstate) ~ i(time_to_treatment, treat, -1) | id + year + region_agg + recipient_id[t],
  cluster = ~donor_id^recipient_id,
  data = df.pois.implementation)

# plot
ggfixest::ggiplot(res.pois.implementation, multi_style = "facet", main = "Effect on aid implementation")
```

```{r ols.implementation}

# define sample
df.ols.implementation <- df |> 
  select(year, id, donor_id, recipient_id, 
         state = sh_state, nonstate = sh_nonstate,
         rel_time, t,
         treat,
         region_agg) |> 
    mutate(time_to_treatment = case_when(
      rel_time <= -10 ~ -10,
      rel_time >= 10 ~ 10,
      .default = rel_time
    ))

# run model
res.ols.implementation = feols(
  c(state, nonstate) ~ 
  i(time_to_treatment, treat, -1) | id + year + region_agg,
  cluster = ~id,
  data = df.ols.implementation)

# plot
ggfixest::ggiplot(res.ols.implementation, multi_style = "facet", main = "Effect on aid implementation (%)")

```
